variables:
  VERSION: "$CI_COMMIT_TAG"

before_script:
  - export GRADLE_USER_HOME=`pwd`/.gradle

cache:
  key: gradle-cache-key
  paths:
    - ./gradle/wrapper
    - ./gradle/caches
  policy: pull

stages:
  - assemble
  - check
  - build
  - deploy

assemble:
  stage: assemble
  image: openjdk:11
  script:
    - ./gradlew assemble
  only:
    changes:
      - "*.gradle.kts"
      - gradle.properties
  cache:
    key: gradle-cache-key
    paths:
      - ./gradle/wrapper
      - ./gradle/caches
    policy: push

check:
  image: openjdk:11
  stage: check
  script:
    - "./gradlew ktlint --info"
  tags:
    - n0ra

build:
  image: openjdk:11
  stage: build
  services:
    - postgres:10
  variables:
    POSTGRES_DB: colivery-db
    POSTGRES_USER: colivery-db
    POSTGRES_PASSWORD: 1e04966b-e72e-4cda-baee-25b724339d04
    SPRING_DATASOURCE_URL: "jdbc:postgresql://postgres:5432/${POSTGRES_DB}"
    SPRING_DATASOURCE_USERNAME: "${POSTGRES_USER}"
    SPRING_DATASOURCE_PASSWORD: "${POSTGRES_PASSWORD}"
    AUTH_COGNITO_CLIENTID: 7etsk4q4l3omtoskcdaa69moav
    AUTH_COGNITO_CLIENTSECRET: XXX
    AUTH_COGNITO_BASEURL: https://auth-stage.colivery.eu
    AUTH_COGNITO_CALLBACKURL: XXX
    AUTH_COGNITO_KEYURL: https://cognito-idp.eu-central-1.amazonaws.com/eu-central-1_Yv2fbTGgy/.well-known/jwks.json
    GRADLE_OPTS: -Dorg.gradle.daemon=false -Dspring.profiles.include=test
  script:
    - "./gradlew $GRADLE_OPTS build --info"
  artifacts:
    expire_in: 24 hour
    paths:
      - build/libs/colivery-api-*.jar
  tags:
    - n0ra

deploy manual:
  image: docker
  stage: deploy
  dependencies:
    - build
  environment:
    name: development
  services:
    - docker:19.03.1-dind
  when: manual
  script:
    - "source gradle.properties && docker build -t registry.gitlab.com/colivery1/colivery-api:${version} ."
    - "source gradle.properties && docker build -t registry.gitlab.com/colivery1/colivery-api:latest ."
    - "source gradle.properties && docker push registry.gitlab.com/colivery1/colivery-api:${version}"
    - "source gradle.properties && docker push registry.gitlab.com/colivery1/colivery-api:latest"
  before_script:
    - "docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY"
  after_script:
    - "docker logout $CI_REGISTRY"
  except:
    - develop
    - tags
  tags:
    - n0ra

deploy:
  image: docker
  stage: deploy
  dependencies:
    - build
  environment:
    name: development
  services:
    - docker:19.03.1-dind
  script:
    - "source gradle.properties && docker build -t registry.gitlab.com/colivery1/colivery-api:${version} ."
    - "source gradle.properties && docker build -t registry.gitlab.com/colivery1/colivery-api:latest ."
    - "source gradle.properties && docker push registry.gitlab.com/colivery1/colivery-api:${version}"
    - "source gradle.properties && docker push registry.gitlab.com/colivery1/colivery-api:latest"
  before_script:
    - "docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY"
  after_script:
    - "docker logout $CI_REGISTRY"
  only:
    - develop
  tags:
    - n0ra

deploy with tags:
  image: docker
  stage: deploy
  dependencies:
    - build
  environment:
    name: stage
  services:
    - docker:19.03.1-dind
  script:
    - "sed -i \"s/version=.*/version=${CI_COMMIT_TAG}/g\" gradle.properties"
    - "docker build -t registry.gitlab.com/colivery1/colivery-api:${CI_COMMIT_TAG} ."
    - "docker build -t registry.gitlab.com/colivery1/colivery-api:latest ."
    - "docker push registry.gitlab.com/colivery1/colivery-api:${CI_COMMIT_TAG}"
    - "docker push registry.gitlab.com/colivery1/colivery-api:latest"
  before_script:
    - "docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY"
  after_script:
    - "docker logout $CI_REGISTRY"
  only:
    - tags
  tags:
    - n0ra
